[0m[1mgoogle_project_service.service_networking: Refreshing state... [id=teraform101/servicenetworking.googleapis.com][0m
[0m[1mmodule.vpc.google_compute_network.vpc_network_web: Refreshing state... [id=projects/teraform101/global/networks/teraform101-network-web][0m
[0m[1mgoogle_project_service.cloud_resource_manager: Refreshing state... [id=teraform101/cloudresourcemanager.googleapis.com][0m
[0m[1mmodule.vpc.google_compute_subnetwork.vpc_network_web_subnet_nginx: Refreshing state... [id=projects/teraform101/regions/europe-west2/subnetworks/nginx-subnet][0m
[0m[1mmodule.vpc.google_compute_global_address.private_service_access_ip_range: Refreshing state... [id=projects/teraform101/global/addresses/private-service-access-ip-range][0m
[0m[1mmodule.vpc.google_compute_firewall.net-web-allow-ssh-and-https: Refreshing state... [id=projects/teraform101/global/firewalls/allow-ssh-and-https][0m
[0m[1mmodule.vpc.google_compute_subnetwork.vpc_network_web_subnet_db: Refreshing state... [id=projects/teraform101/regions/europe-west2/subnetworks/db-subnet][0m
[0m[1mmodule.mig.google_compute_instance_template.nginx-web-server: Refreshing state... [id=projects/teraform101/global/instanceTemplates/nginx-web-server][0m
[0m[1mmodule.vpc.google_service_networking_connection.cloud_sql_private_connection: Refreshing state... [id=projects%2Fteraform101%2Fglobal%2Fnetworks%2Fteraform101-network-web:servicenetworking.googleapis.com][0m
[0m[1mmodule.sql.google_sql_database_instance.sql_nginx_db: Refreshing state... [id=sql-nginx-db][0m
[0m[1mmodule.mig.google_compute_instance_group_manager.compute_manager_nginx: Refreshing state... [id=projects/teraform101/zones/europe-west2-a/instanceGroupManagers/compute-manager-nginx][0m
[0m[1mmodule.mig.google_compute_autoscaler.nginx_autoscaler: Refreshing state... [id=projects/teraform101/zones/europe-west2-a/autoscalers/nginx-autoscaler][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
  [33m~[0m update in-place[0m
[31m-[0m/[32m+[0m destroy and then create replacement[0m

Terraform will perform the following actions:

[1m  # module.mig.google_compute_instance_group_manager.compute_manager_nginx[0m will be updated in-place
[0m  [33m~[0m[0m resource "google_compute_instance_group_manager" "compute_manager_nginx" {
        id                             = "projects/teraform101/zones/europe-west2-a/instanceGroupManagers/compute-manager-nginx"
        name                           = "compute-manager-nginx"
        [90m# (13 unchanged attributes hidden)[0m[0m

      [33m~[0m[0m version {
          [33m~[0m[0m instance_template = "https://www.googleapis.com/compute/v1/projects/teraform101/global/instanceTemplates/nginx-web-server" -> (known after apply)
            name              = "nginx-v0.1"
        }

        [90m# (3 unchanged blocks hidden)[0m[0m
    }

[1m  # module.mig.google_compute_instance_template.nginx-web-server[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "google_compute_instance_template" "nginx-web-server" {
      [33m~[0m[0m effective_labels     = {
          [31m-[0m[0m "goog-terraform-provisioned" = "true"
        } -> (known after apply) [31m# forces replacement[0m[0m
      [33m~[0m[0m id                   = "projects/teraform101/global/instanceTemplates/nginx-web-server" -> (known after apply)
      [31m-[0m[0m labels               = {} [90m-> null[0m[0m
      [33m~[0m[0m metadata_fingerprint = "UKSpZ-5Cx9k=" -> (known after apply)
        name                 = "nginx-web-server"
      [32m+[0m[0m name_prefix          = (known after apply)
      [33m~[0m[0m region               = "europe-west2" -> (known after apply)
      [33m~[0m[0m self_link            = "https://www.googleapis.com/compute/v1/projects/teraform101/global/instanceTemplates/nginx-web-server" -> (known after apply)
      [33m~[0m[0m self_link_unique     = "https://www.googleapis.com/compute/v1/projects/teraform101/global/instanceTemplates/nginx-web-server?uniqueId=7647672066618382229" -> (known after apply)
        tags                 = [
            "nginx-server",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [33m~[0m[0m terraform_labels     = {
          [31m-[0m[0m "goog-terraform-provisioned" = "true"
        } -> (known after apply)
        [90m# (7 unchanged attributes hidden)[0m[0m

      [33m~[0m[0m confidential_instance_config (known after apply)

      [33m~[0m[0m disk {
          [33m~[0m[0m device_name       = "persistent-disk-0" -> (known after apply)
          [33m~[0m[0m disk_size_gb      = 0 -> (known after apply)
          [33m~[0m[0m disk_type         = "pd-standard" -> (known after apply)
          [33m~[0m[0m interface         = "SCSI" -> (known after apply)
          [31m-[0m[0m labels            = {} [90m-> null[0m[0m
          [33m~[0m[0m mode              = "READ_WRITE" -> (known after apply)
          [33m~[0m[0m provisioned_iops  = 0 -> (known after apply)
          [31m-[0m[0m resource_policies = [] [90m-> null[0m[0m
          [33m~[0m[0m source_image      = "projects/debian-cloud/global/images/family/debian-11" [33m->[0m[0m "debian-cloud/debian-11"
          [33m~[0m[0m type              = "PERSISTENT" -> (known after apply)
            [90m# (5 unchanged attributes hidden)[0m[0m
        }

      [33m~[0m[0m network_interface {
          [33m~[0m[0m internal_ipv6_prefix_length = 0 -> (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [33m~[0m[0m name                        = "nic0" -> (known after apply)
          [33m~[0m[0m network                     = "https://www.googleapis.com/compute/v1/projects/teraform101/global/networks/teraform101-network-web" -> (known after apply)
          [31m-[0m[0m queue_count                 = 0 [90m-> null[0m[0m
          [32m+[0m[0m stack_type                  = (known after apply)
          [33m~[0m[0m subnetwork                  = "https://www.googleapis.com/compute/v1/projects/teraform101/regions/europe-west2/subnetworks/nginx-subnet" [33m->[0m[0m "projects/teraform101/regions/europe-west2/subnetworks/nginx-subnet"
          [33m~[0m[0m subnetwork_project          = "teraform101" -> (known after apply)
            [90m# (2 unchanged attributes hidden)[0m[0m

          [33m~[0m[0m access_config {
              [32m+[0m[0m nat_ip                 = (known after apply)
              [33m~[0m[0m network_tier           = "PREMIUM" -> (known after apply)
              [32m+[0m[0m public_ptr_domain_name = (known after apply)
            }
        }

      [33m~[0m[0m scheduling {
          [31m-[0m[0m min_node_cpus               = 0 [90m-> null[0m[0m
          [33m~[0m[0m provisioning_model          = "STANDARD" -> (known after apply)
            [90m# (4 unchanged attributes hidden)[0m[0m
        }
    }

[1m  # module.sql.google_sql_database_instance.sql_nginx_db[0m will be updated in-place
[0m  [33m~[0m[0m resource "google_sql_database_instance" "sql_nginx_db" {
        id                             = "sql-nginx-db"
        name                           = "sql-nginx-db"
      # [33mWarning[0m: this attribute value will no longer be marked as sensitive
      # after applying this change.[0m The value is unchanged.
      [33m~[0m[0m server_ca_cert                 = (sensitive value)
        [90m# (17 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1m  # module.lb.module.gce-lb-http.google_compute_backend_service.default["default"][0m will be created
[0m  [32m+[0m[0m resource "google_compute_backend_service" "default" {
      [32m+[0m[0m connection_draining_timeout_sec = 300
      [32m+[0m[0m creation_timestamp              = (known after apply)
      [32m+[0m[0m enable_cdn                      = false
      [32m+[0m[0m fingerprint                     = (known after apply)
      [32m+[0m[0m generated_id                    = (known after apply)
      [32m+[0m[0m health_checks                   = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m load_balancing_scheme           = "EXTERNAL"
      [32m+[0m[0m name                            = "nginx-http-lb-backend-default"
      [32m+[0m[0m port_name                       = "http"
      [32m+[0m[0m project                         = "teraform101"
      [32m+[0m[0m protocol                        = "HTTP"
      [32m+[0m[0m self_link                       = (known after apply)
      [32m+[0m[0m session_affinity                = (known after apply)
      [32m+[0m[0m timeout_sec                     = 10

      [32m+[0m[0m backend {
          [32m+[0m[0m balancing_mode               = "UTILIZATION"
          [32m+[0m[0m capacity_scaler              = 1
          [32m+[0m[0m group                        = "compute-manager-nginx"
          [32m+[0m[0m max_connections              = (known after apply)
          [32m+[0m[0m max_connections_per_endpoint = (known after apply)
          [32m+[0m[0m max_connections_per_instance = (known after apply)
          [32m+[0m[0m max_rate                     = (known after apply)
          [32m+[0m[0m max_rate_per_endpoint        = (known after apply)
          [32m+[0m[0m max_rate_per_instance        = (known after apply)
          [32m+[0m[0m max_utilization              = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m cdn_policy (known after apply)

      [32m+[0m[0m log_config {
          [32m+[0m[0m enable      = true
          [32m+[0m[0m sample_rate = 1
        }
    }

[1m  # module.lb.module.gce-lb-http.google_compute_firewall.default-hc[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "default-hc" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "nginx-http-lb-hc-0"
      [32m+[0m[0m network            = "default"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "teraform101"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "130.211.0.0/22",
          [32m+[0m[0m "35.191.0.0/16",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "nginx-server",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "80",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # module.lb.module.gce-lb-http.google_compute_global_address.default[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_global_address" "default" {
      [32m+[0m[0m address            = (known after apply)
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m effective_labels   = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m label_fingerprint  = (known after apply)
      [32m+[0m[0m name               = "nginx-http-lb-address"
      [32m+[0m[0m prefix_length      = (known after apply)
      [32m+[0m[0m project            = "teraform101"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m terraform_labels   = (known after apply)
    }

[1m  # module.lb.module.gce-lb-http.google_compute_global_forwarding_rule.http[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_global_forwarding_rule" "http" {
      [32m+[0m[0m base_forwarding_rule  = (known after apply)
      [32m+[0m[0m effective_labels      = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address            = (known after apply)
      [32m+[0m[0m ip_protocol           = (known after apply)
      [32m+[0m[0m label_fingerprint     = (known after apply)
      [32m+[0m[0m load_balancing_scheme = "EXTERNAL"
      [32m+[0m[0m name                  = "nginx-http-lb"
      [32m+[0m[0m network               = (known after apply)
      [32m+[0m[0m port_range            = "80"
      [32m+[0m[0m project               = "teraform101"
      [32m+[0m[0m psc_connection_id     = (known after apply)
      [32m+[0m[0m psc_connection_status = (known after apply)
      [32m+[0m[0m self_link             = (known after apply)
      [32m+[0m[0m subnetwork            = (known after apply)
      [32m+[0m[0m target                = (known after apply)
      [32m+[0m[0m terraform_labels      = (known after apply)
    }

[1m  # module.lb.module.gce-lb-http.google_compute_health_check.default["default"][0m will be created
[0m  [32m+[0m[0m resource "google_compute_health_check" "default" {
      [32m+[0m[0m check_interval_sec  = 5
      [32m+[0m[0m creation_timestamp  = (known after apply)
      [32m+[0m[0m healthy_threshold   = 2
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m name                = "nginx-http-lb-hc-default"
      [32m+[0m[0m project             = "teraform101"
      [32m+[0m[0m self_link           = (known after apply)
      [32m+[0m[0m timeout_sec         = 5
      [32m+[0m[0m type                = (known after apply)
      [32m+[0m[0m unhealthy_threshold = 2

      [32m+[0m[0m http_health_check {
          [32m+[0m[0m port         = 80
          [32m+[0m[0m proxy_header = "NONE"
          [32m+[0m[0m request_path = "/"
        }

      [32m+[0m[0m log_config {
          [32m+[0m[0m enable = false
        }
    }

[1m  # module.lb.module.gce-lb-http.google_compute_target_http_proxy.default[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_target_http_proxy" "default" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "nginx-http-lb-http-proxy"
      [32m+[0m[0m project            = "teraform101"
      [32m+[0m[0m proxy_bind         = (known after apply)
      [32m+[0m[0m proxy_id           = (known after apply)
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m url_map            = (known after apply)
    }

[1m  # module.lb.module.gce-lb-http.google_compute_url_map.default[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_url_map" "default" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m default_service    = (known after apply)
      [32m+[0m[0m fingerprint        = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m map_id             = (known after apply)
      [32m+[0m[0m name               = "nginx-http-lb-url-map"
      [32m+[0m[0m project            = "teraform101"
      [32m+[0m[0m self_link          = (known after apply)
    }

[1mPlan:[0m 8 to add, 2 to change, 1 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
