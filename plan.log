[0m[1mvar.db_password[0m
  The password for the Cloud SQL database

  [1mEnter a value:[0m [0m

[0m[1mmodule.web-server-mig.module.lb.module.gce-lb-http.google_compute_global_address.default[0]: Refreshing state... [id=projects/teraform101/global/addresses/nginx-http-lb-address][0m
[0m[1mgoogle_project_service.cloud_resource_manager: Refreshing state... [id=teraform101/cloudresourcemanager.googleapis.com][0m
[0m[1mmodule.vpc.google_compute_network.vpc_network_web: Refreshing state... [id=projects/teraform101/global/networks/teraform101-network-web][0m
[0m[1mmodule.web-server-mig.module.mig.google_service_account.sa_nginx: Refreshing state... [id=projects/teraform101/serviceAccounts/sa-nginx@teraform101.iam.gserviceaccount.com][0m
[0m[1mmodule.web-server-mig.module.mig.google_project_iam_member.nginx_cloudsql_access: Refreshing state... [id=teraform101/roles/cloudsql.client/serviceAccount:sa-nginx@teraform101.iam.gserviceaccount.com][0m
[0m[1mmodule.vpc.google_compute_global_address.private_service_access_ip_range: Refreshing state... [id=projects/teraform101/global/addresses/private-service-access-ip-range][0m
[0m[1mmodule.vpc.google_service_networking_connection.cloud_sql_private_connection: Refreshing state... [id=projects%2Fteraform101%2Fglobal%2Fnetworks%2Fteraform101-network-web:servicenetworking.googleapis.com][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
  [31m-[0m destroy[0m

Terraform will perform the following actions:

[1m  # module.mig.google_compute_autoscaler.nginx_autoscaler[0m will be created
[0m  [32m+[0m[0m resource "google_compute_autoscaler" "nginx_autoscaler" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "nginx-autoscaler"
      [32m+[0m[0m project            = "teraform101"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m target             = (known after apply)
      [32m+[0m[0m zone               = "europe-west2-a"

      [32m+[0m[0m autoscaling_policy {
          [32m+[0m[0m cooldown_period = 60
          [32m+[0m[0m max_replicas    = 3
          [32m+[0m[0m min_replicas    = 1
          [32m+[0m[0m mode            = "ON"

          [32m+[0m[0m cpu_utilization {
              [32m+[0m[0m predictive_method = "NONE"
              [32m+[0m[0m target            = 0.6
            }
        }
    }

[1m  # module.mig.google_compute_instance_group_manager.compute_manager_nginx[0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance_group_manager" "compute_manager_nginx" {
      [32m+[0m[0m base_instance_name             = "nginx-instance"
      [32m+[0m[0m fingerprint                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m instance_group                 = (known after apply)
      [32m+[0m[0m list_managed_instances_results = "PAGELESS"
      [32m+[0m[0m name                           = "compute-manager-nginx"
      [32m+[0m[0m operation                      = (known after apply)
      [32m+[0m[0m project                        = "teraform101"
      [32m+[0m[0m self_link                      = (known after apply)
      [32m+[0m[0m status                         = (known after apply)
      [32m+[0m[0m target_size                    = (known after apply)
      [32m+[0m[0m wait_for_instances             = false
      [32m+[0m[0m wait_for_instances_status      = "STABLE"
      [32m+[0m[0m zone                           = "europe-west2-a"

      [32m+[0m[0m instance_lifecycle_policy (known after apply)

      [32m+[0m[0m named_port {
          [32m+[0m[0m name = "http"
          [32m+[0m[0m port = 80
        }

      [32m+[0m[0m update_policy (known after apply)

      [32m+[0m[0m version {
          [32m+[0m[0m instance_template = (known after apply)
          [32m+[0m[0m name              = "nginx-v0.1"
        }
    }

[1m  # module.mig.google_compute_instance_template.nginx-web-server[0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance_template" "nginx-web-server" {
      [32m+[0m[0m can_ip_forward       = false
      [32m+[0m[0m description          = "This template is used to create nginx server instances."
      [32m+[0m[0m effective_labels     = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance_description = "Instance created by an instance group manager using nginx-web-server template"
      [32m+[0m[0m machine_type         = "e2-micro"
      [32m+[0m[0m metadata             = {
          [32m+[0m[0m "startup-script" = <<-EOT
                #!/bin/bash
                      # Wait for the apt lock to be released
                      # VM auto-updates can cause lock on apt
                      while sudo lsof /var/lib/apt/lists/lock /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock; do
                        echo "Waiting for apt lock..."
                        sleep 10
                      done
                
                      # Update package list and install Nginx
                      sudo apt-get update
                      sudo apt-get install -y nginx
                
                      # Start and enable Nginx
                      sudo systemctl start nginx
                      sudo systemctl enable nginx
            EOT
        }
      [32m+[0m[0m metadata_fingerprint = (known after apply)
      [32m+[0m[0m name                 = "nginx-web-server"
      [32m+[0m[0m name_prefix          = (known after apply)
      [32m+[0m[0m project              = "teraform101"
      [32m+[0m[0m region               = (known after apply)
      [32m+[0m[0m self_link            = (known after apply)
      [32m+[0m[0m self_link_unique     = (known after apply)
      [32m+[0m[0m tags                 = [
          [32m+[0m[0m "nginx-server",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [32m+[0m[0m terraform_labels     = (known after apply)

      [32m+[0m[0m confidential_instance_config (known after apply)

      [32m+[0m[0m disk {
          [32m+[0m[0m auto_delete      = true
          [32m+[0m[0m boot             = true
          [32m+[0m[0m device_name      = (known after apply)
          [32m+[0m[0m disk_size_gb     = (known after apply)
          [32m+[0m[0m disk_type        = (known after apply)
          [32m+[0m[0m interface        = (known after apply)
          [32m+[0m[0m mode             = (known after apply)
          [32m+[0m[0m provisioned_iops = (known after apply)
          [32m+[0m[0m source_image     = "debian-cloud/debian-11"
          [32m+[0m[0m type             = (known after apply)
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip                 = (known after apply)
              [32m+[0m[0m network_tier           = (known after apply)
              [32m+[0m[0m public_ptr_domain_name = (known after apply)
            }
        }

      [32m+[0m[0m scheduling {
          [32m+[0m[0m automatic_restart   = true
          [32m+[0m[0m on_host_maintenance = "MIGRATE"
          [32m+[0m[0m preemptible         = false
          [32m+[0m[0m provisioning_model  = (known after apply)
        }

      [32m+[0m[0m service_account {
          [32m+[0m[0m email  = (known after apply)
          [32m+[0m[0m scopes = [
              [32m+[0m[0m "https://www.googleapis.com/auth/cloud-platform",
            ]
        }
    }

[1m  # module.mig.google_project_iam_member.nginx_cloudsql_access[0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "nginx_cloudsql_access" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = (known after apply)
      [32m+[0m[0m project = "teraform101"
      [32m+[0m[0m role    = "roles/cloudsql.client"
    }

[1m  # module.mig.google_service_account.sa_nginx[0m will be created
[0m  [32m+[0m[0m resource "google_service_account" "sa_nginx" {
      [32m+[0m[0m account_id   = "sa-nginx"
      [32m+[0m[0m disabled     = false
      [32m+[0m[0m display_name = "nginx mig service account"
      [32m+[0m[0m email        = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m member       = (known after apply)
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m project      = "teraform101"
      [32m+[0m[0m unique_id    = (known after apply)
    }

[1m  # module.sql.google_secret_manager_secret.db_password_secret[0m will be created
[0m  [32m+[0m[0m resource "google_secret_manager_secret" "db_password_secret" {
      [32m+[0m[0m create_time           = (known after apply)
      [32m+[0m[0m effective_annotations = (known after apply)
      [32m+[0m[0m effective_labels      = (known after apply)
      [32m+[0m[0m expire_time           = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m project               = "teraform101"
      [32m+[0m[0m secret_id             = "db-password"
      [32m+[0m[0m terraform_labels      = (known after apply)

      [32m+[0m[0m replication {
          [32m+[0m[0m auto {
            }
        }
    }

[1m  # module.sql.google_secret_manager_secret_version.db_password_version[0m will be created
[0m  [32m+[0m[0m resource "google_secret_manager_secret_version" "db_password_version" {
      [32m+[0m[0m create_time           = (known after apply)
      [32m+[0m[0m deletion_policy       = "DELETE"
      [32m+[0m[0m destroy_time          = (known after apply)
      [32m+[0m[0m enabled               = true
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m is_secret_data_base64 = false
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m secret                = (known after apply)
      [32m+[0m[0m secret_data           = (sensitive value)
      [32m+[0m[0m version               = (known after apply)
    }

[1m  # module.sql.google_sql_database.nginx_db[0m will be created
[0m  [32m+[0m[0m resource "google_sql_database" "nginx_db" {
      [32m+[0m[0m charset         = (known after apply)
      [32m+[0m[0m collation       = (known after apply)
      [32m+[0m[0m deletion_policy = "DELETE"
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m instance        = "sql-nginx-db"
      [32m+[0m[0m name            = "nginx-db"
      [32m+[0m[0m project         = "teraform101"
      [32m+[0m[0m self_link       = (known after apply)
    }

[1m  # module.sql.google_sql_database_instance.sql_nginx_db[0m will be created
[0m  [32m+[0m[0m resource "google_sql_database_instance" "sql_nginx_db" {
      [32m+[0m[0m available_maintenance_versions = (known after apply)
      [32m+[0m[0m connection_name                = (known after apply)
      [32m+[0m[0m database_version               = "POSTGRES_15"
      [32m+[0m[0m deletion_protection            = false
      [32m+[0m[0m dns_name                       = (known after apply)
      [32m+[0m[0m encryption_key_name            = (known after apply)
      [32m+[0m[0m first_ip_address               = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m instance_type                  = (known after apply)
      [32m+[0m[0m ip_address                     = (known after apply)
      [32m+[0m[0m maintenance_version            = (known after apply)
      [32m+[0m[0m master_instance_name           = (known after apply)
      [32m+[0m[0m name                           = "sql-nginx-db"
      [32m+[0m[0m private_ip_address             = (known after apply)
      [32m+[0m[0m project                        = "teraform101"
      [32m+[0m[0m psc_service_attachment_link    = (known after apply)
      [32m+[0m[0m public_ip_address              = (known after apply)
      [32m+[0m[0m region                         = "europe-west2"
      [32m+[0m[0m self_link                      = (known after apply)
      [32m+[0m[0m server_ca_cert                 = (known after apply)
      [32m+[0m[0m service_account_email_address  = (known after apply)

      [32m+[0m[0m replica_configuration (known after apply)

      [32m+[0m[0m settings {
          [32m+[0m[0m activation_policy     = "ALWAYS"
          [32m+[0m[0m availability_type     = "ZONAL"
          [32m+[0m[0m connector_enforcement = (known after apply)
          [32m+[0m[0m disk_autoresize       = true
          [32m+[0m[0m disk_autoresize_limit = 0
          [32m+[0m[0m disk_size             = (known after apply)
          [32m+[0m[0m disk_type             = "PD_HDD"
          [32m+[0m[0m pricing_plan          = "PER_USE"
          [32m+[0m[0m tier                  = "db-g1-small"
          [32m+[0m[0m user_labels           = (known after apply)
          [32m+[0m[0m version               = (known after apply)

          [32m+[0m[0m backup_configuration (known after apply)

          [32m+[0m[0m ip_configuration {
              [32m+[0m[0m enable_private_path_for_google_cloud_services = true
              [32m+[0m[0m ipv4_enabled                                  = false
              [32m+[0m[0m private_network                               = "https://www.googleapis.com/compute/v1/projects/teraform101/global/networks/teraform101-network-web"
            }

          [32m+[0m[0m location_preference {
              [32m+[0m[0m zone = "europe-west2-a"
            }
        }
    }

[1m  # module.sql.google_sql_user.db_user[0m will be created
[0m  [32m+[0m[0m resource "google_sql_user" "db_user" {
      [32m+[0m[0m host                    = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m instance                = "sql-nginx-db"
      [32m+[0m[0m name                    = "dbuser"
      [32m+[0m[0m password                = (sensitive value)
      [32m+[0m[0m project                 = "teraform101"
      [32m+[0m[0m sql_server_user_details = (known after apply)
    }

[1m  # module.vpc.google_compute_subnetwork.vpc_network_web_subnet_db[0m will be created
[0m  [32m+[0m[0m resource "google_compute_subnetwork" "vpc_network_web_subnet_db" {
      [32m+[0m[0m creation_timestamp         = (known after apply)
      [32m+[0m[0m description                = "A subnet that will host DB for Nginx"
      [32m+[0m[0m external_ipv6_prefix       = (known after apply)
      [32m+[0m[0m fingerprint                = (known after apply)
      [32m+[0m[0m gateway_address            = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m internal_ipv6_prefix       = (known after apply)
      [32m+[0m[0m ip_cidr_range              = "10.10.1.0/24"
      [32m+[0m[0m ipv6_cidr_range            = (known after apply)
      [32m+[0m[0m name                       = "db-subnet"
      [32m+[0m[0m network                    = "projects/teraform101/global/networks/teraform101-network-web"
      [32m+[0m[0m private_ip_google_access   = true
      [32m+[0m[0m private_ipv6_google_access = (known after apply)
      [32m+[0m[0m project                    = "teraform101"
      [32m+[0m[0m purpose                    = (known after apply)
      [32m+[0m[0m region                     = "europe-west2"
      [32m+[0m[0m secondary_ip_range         = (known after apply)
      [32m+[0m[0m self_link                  = (known after apply)
      [32m+[0m[0m stack_type                 = (known after apply)
    }

[1m  # module.vpc.google_compute_subnetwork.vpc_network_web_subnet_nginx[0m will be created
[0m  [32m+[0m[0m resource "google_compute_subnetwork" "vpc_network_web_subnet_nginx" {
      [32m+[0m[0m creation_timestamp         = (known after apply)
      [32m+[0m[0m description                = "A subnet that will host Nginx website VMs"
      [32m+[0m[0m external_ipv6_prefix       = (known after apply)
      [32m+[0m[0m fingerprint                = (known after apply)
      [32m+[0m[0m gateway_address            = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m internal_ipv6_prefix       = (known after apply)
      [32m+[0m[0m ip_cidr_range              = "10.10.0.0/24"
      [32m+[0m[0m ipv6_cidr_range            = (known after apply)
      [32m+[0m[0m name                       = "nginx-subnet"
      [32m+[0m[0m network                    = "projects/teraform101/global/networks/teraform101-network-web"
      [32m+[0m[0m private_ip_google_access   = true
      [32m+[0m[0m private_ipv6_google_access = (known after apply)
      [32m+[0m[0m project                    = "teraform101"
      [32m+[0m[0m purpose                    = (known after apply)
      [32m+[0m[0m region                     = "europe-west2"
      [32m+[0m[0m secondary_ip_range         = (known after apply)
      [32m+[0m[0m self_link                  = (known after apply)
      [32m+[0m[0m stack_type                 = (known after apply)
    }

[1m  # module.lb.module.gce-lb-http.google_compute_backend_service.default["default"][0m will be created
[0m  [32m+[0m[0m resource "google_compute_backend_service" "default" {
      [32m+[0m[0m connection_draining_timeout_sec = 300
      [32m+[0m[0m creation_timestamp              = (known after apply)
      [32m+[0m[0m enable_cdn                      = false
      [32m+[0m[0m fingerprint                     = (known after apply)
      [32m+[0m[0m generated_id                    = (known after apply)
      [32m+[0m[0m health_checks                   = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m load_balancing_scheme           = "EXTERNAL"
      [32m+[0m[0m name                            = "nginx-http-lb-backend-default"
      [32m+[0m[0m port_name                       = "http"
      [32m+[0m[0m project                         = "teraform101"
      [32m+[0m[0m protocol                        = "HTTP"
      [32m+[0m[0m self_link                       = (known after apply)
      [32m+[0m[0m session_affinity                = (known after apply)
      [32m+[0m[0m timeout_sec                     = 10

      [32m+[0m[0m backend {
          [32m+[0m[0m balancing_mode               = "UTILIZATION"
          [32m+[0m[0m capacity_scaler              = 1
          [32m+[0m[0m group                        = (known after apply)
          [32m+[0m[0m max_connections              = (known after apply)
          [32m+[0m[0m max_connections_per_endpoint = (known after apply)
          [32m+[0m[0m max_connections_per_instance = (known after apply)
          [32m+[0m[0m max_rate                     = (known after apply)
          [32m+[0m[0m max_rate_per_endpoint        = (known after apply)
          [32m+[0m[0m max_rate_per_instance        = (known after apply)
          [32m+[0m[0m max_utilization              = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m cdn_policy (known after apply)

      [32m+[0m[0m log_config {
          [32m+[0m[0m enable      = true
          [32m+[0m[0m sample_rate = 1
        }
    }

[1m  # module.lb.module.gce-lb-http.google_compute_firewall.default-hc[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "default-hc" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "nginx-http-lb-hc-0"
      [32m+[0m[0m network            = "teraform101-network-web"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "teraform101"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "130.211.0.0/22",
          [32m+[0m[0m "35.191.0.0/16",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "nginx-server",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "80",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # module.lb.module.gce-lb-http.google_compute_global_address.default[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_global_address" "default" {
      [32m+[0m[0m address            = (known after apply)
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m effective_labels   = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m label_fingerprint  = (known after apply)
      [32m+[0m[0m name               = "nginx-http-lb-address"
      [32m+[0m[0m prefix_length      = (known after apply)
      [32m+[0m[0m project            = "teraform101"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m terraform_labels   = (known after apply)
    }

[1m  # module.lb.module.gce-lb-http.google_compute_global_forwarding_rule.http[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_global_forwarding_rule" "http" {
      [32m+[0m[0m base_forwarding_rule  = (known after apply)
      [32m+[0m[0m effective_labels      = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address            = (known after apply)
      [32m+[0m[0m ip_protocol           = (known after apply)
      [32m+[0m[0m label_fingerprint     = (known after apply)
      [32m+[0m[0m load_balancing_scheme = "EXTERNAL"
      [32m+[0m[0m name                  = "nginx-http-lb"
      [32m+[0m[0m network               = (known after apply)
      [32m+[0m[0m port_range            = "80"
      [32m+[0m[0m project               = "teraform101"
      [32m+[0m[0m psc_connection_id     = (known after apply)
      [32m+[0m[0m psc_connection_status = (known after apply)
      [32m+[0m[0m self_link             = (known after apply)
      [32m+[0m[0m subnetwork            = (known after apply)
      [32m+[0m[0m target                = (known after apply)
      [32m+[0m[0m terraform_labels      = (known after apply)
    }

[1m  # module.lb.module.gce-lb-http.google_compute_health_check.default["default"][0m will be created
[0m  [32m+[0m[0m resource "google_compute_health_check" "default" {
      [32m+[0m[0m check_interval_sec  = 5
      [32m+[0m[0m creation_timestamp  = (known after apply)
      [32m+[0m[0m healthy_threshold   = 2
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m name                = "nginx-http-lb-hc-default"
      [32m+[0m[0m project             = "teraform101"
      [32m+[0m[0m self_link           = (known after apply)
      [32m+[0m[0m timeout_sec         = 5
      [32m+[0m[0m type                = (known after apply)
      [32m+[0m[0m unhealthy_threshold = 2

      [32m+[0m[0m http_health_check {
          [32m+[0m[0m port         = 80
          [32m+[0m[0m proxy_header = "NONE"
          [32m+[0m[0m request_path = "/"
        }

      [32m+[0m[0m log_config {
          [32m+[0m[0m enable = false
        }
    }

[1m  # module.lb.module.gce-lb-http.google_compute_target_http_proxy.default[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_target_http_proxy" "default" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "nginx-http-lb-http-proxy"
      [32m+[0m[0m project            = "teraform101"
      [32m+[0m[0m proxy_bind         = (known after apply)
      [32m+[0m[0m proxy_id           = (known after apply)
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m url_map            = (known after apply)
    }

[1m  # module.lb.module.gce-lb-http.google_compute_url_map.default[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_url_map" "default" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m default_service    = (known after apply)
      [32m+[0m[0m fingerprint        = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m map_id             = (known after apply)
      [32m+[0m[0m name               = "nginx-http-lb-url-map"
      [32m+[0m[0m project            = "teraform101"
      [32m+[0m[0m self_link          = (known after apply)
    }

[1m  # module.web-server-mig.module.mig.google_project_iam_member.nginx_cloudsql_access[0m will be [1m[31mdestroyed[0m
  # (because google_project_iam_member.nginx_cloudsql_access is not in configuration)
[0m  [31m-[0m[0m resource "google_project_iam_member" "nginx_cloudsql_access" {
      [31m-[0m[0m etag    = "BwYxUNIt3qM=" [90m-> null[0m[0m
      [31m-[0m[0m id      = "teraform101/roles/cloudsql.client/serviceAccount:sa-nginx@teraform101.iam.gserviceaccount.com" [90m-> null[0m[0m
      [31m-[0m[0m member  = "serviceAccount:sa-nginx@teraform101.iam.gserviceaccount.com" [90m-> null[0m[0m
      [31m-[0m[0m project = "teraform101" [90m-> null[0m[0m
      [31m-[0m[0m role    = "roles/cloudsql.client" [90m-> null[0m[0m
    }

[1m  # module.web-server-mig.module.mig.google_service_account.sa_nginx[0m will be [1m[31mdestroyed[0m
  # (because google_service_account.sa_nginx is not in configuration)
[0m  [31m-[0m[0m resource "google_service_account" "sa_nginx" {
      [31m-[0m[0m account_id   = "sa-nginx" [90m-> null[0m[0m
      [31m-[0m[0m disabled     = false [90m-> null[0m[0m
      [31m-[0m[0m display_name = "nginx mig service account" [90m-> null[0m[0m
      [31m-[0m[0m email        = "sa-nginx@teraform101.iam.gserviceaccount.com" [90m-> null[0m[0m
      [31m-[0m[0m id           = "projects/teraform101/serviceAccounts/sa-nginx@teraform101.iam.gserviceaccount.com" [90m-> null[0m[0m
      [31m-[0m[0m member       = "serviceAccount:sa-nginx@teraform101.iam.gserviceaccount.com" [90m-> null[0m[0m
      [31m-[0m[0m name         = "projects/teraform101/serviceAccounts/sa-nginx@teraform101.iam.gserviceaccount.com" [90m-> null[0m[0m
      [31m-[0m[0m project      = "teraform101" [90m-> null[0m[0m
      [31m-[0m[0m unique_id    = "103043981361295706218" [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.web-server-mig.module.lb.module.gce-lb-http.google_compute_global_address.default[0][0m will be [1m[31mdestroyed[0m
  # (because google_compute_global_address.default is not in configuration)
[0m  [31m-[0m[0m resource "google_compute_global_address" "default" {
      [31m-[0m[0m address            = "34.13.76.240" [90m-> null[0m[0m
      [31m-[0m[0m address_type       = "EXTERNAL" [90m-> null[0m[0m
      [31m-[0m[0m creation_timestamp = "2025-03-27T03:57:27.468-07:00" [90m-> null[0m[0m
      [31m-[0m[0m effective_labels   = {} [90m-> null[0m[0m
      [31m-[0m[0m id                 = "projects/teraform101/global/addresses/nginx-http-lb-address" [90m-> null[0m[0m
      [31m-[0m[0m label_fingerprint  = "42WmSpB8rSM=" [90m-> null[0m[0m
      [31m-[0m[0m name               = "nginx-http-lb-address" [90m-> null[0m[0m
      [31m-[0m[0m prefix_length      = 0 [90m-> null[0m[0m
      [31m-[0m[0m project            = "teraform101" [90m-> null[0m[0m
      [31m-[0m[0m self_link          = "https://www.googleapis.com/compute/v1/projects/teraform101/global/addresses/nginx-http-lb-address" [90m-> null[0m[0m
      [31m-[0m[0m terraform_labels   = {} [90m-> null[0m[0m
        [90m# (4 unchanged attributes hidden)[0m[0m
    }

[1mPlan:[0m 19 to add, 0 to change, 3 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
